{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/ActionDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/ActionDialog.vue","mtime":1655115106990},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/babel-loader/lib/index.js","mtime":1655376985883},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js","mtime":1655376986005}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  props: {\n    idSBD: {\n    type: String,\n    },\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    connection: {\n      type: Object,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      inputVisible: false,\n      inputValue: '',\n      connectionForm: {\n        sourceId: null,\n        sourcePosition: null,\n        destinationId: null,\n        destinationPosition: null,\n        text: null,\n        messages: [],\n        actionMsg: \"\",\n      },\n    };\n  },\n  methods: {\n    async handleClickSaveConnection() {\n      this.inputValue = '',\n      this.$emit('update:visible', false);\n      this.$emit('update:connection', Object.assign(this.connection, {\n        text: this.connectionForm.text,\n        messages: this.connectionForm.actionMsg,\n        actionMsg: this.connectionForm.actionMsg,\n      }));\n    },\n    async handleClickCancelSaveConnection() {\n      this.inputValue = '',\n      this.$emit('update:visible', false);\n    },\n  },\n  watch: {\n    connection: {\n      immediate: true,\n      handler(val) {\n        if (!val) { return; }\n        this.connectionForm.id = val.id;\n        this.connectionForm.messages = val.messages;\n        this.connectionForm.actionMsg = val.actionMsg;\n\n      },\n    },\n  },\n};\n",{"version":3,"sources":["ActionDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ActionDialog.vue","sourceRoot":"src/components/Dialog","sourcesContent":["<template>\n    <div>\n      <md-dialog :md-click-outside-to-close=\"false\" :md-active.sync=\"visible\">\n      <md-dialog-title>Do-State</md-dialog-title>\n\n     <el-row class=\"text-label-switch\">\n    <el-col>\n    <label >Message</label>\n  <el-input\n    v-model=\"connectionForm.actionMsg\"\n    placeholder=\"FÃ¼ge Message hinzu\"\n    show-word-limit\n    type=\"textarea\"\n  />\n  \n    </el-col>\n  </el-row>\n<div class=\"md-layout md-alignment-center\">\n<div class=\"md-layout-item \">\n                <md-button @click=\"handleClickCancelSaveConnection\">Abbrechen</md-button>\n</div>\n<div class=\"md-layout-item \">\n                <md-button @click=\"handleClickSaveConnection\">Speichern</md-button>\n</div>\n</div>\n      </md-dialog>\n    </div>\n</template>\n<script>\n\n  export default {\n    props: {\n      idSBD: {\n      type: String,\n      },\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      connection: {\n        type: Object,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        inputVisible: false,\n        inputValue: '',\n        connectionForm: {\n          sourceId: null,\n          sourcePosition: null,\n          destinationId: null,\n          destinationPosition: null,\n          text: null,\n          messages: [],\n          actionMsg: \"\",\n        },\n      };\n    },\n    methods: {\n      async handleClickSaveConnection() {\n        this.inputValue = '',\n        this.$emit('update:visible', false);\n        this.$emit('update:connection', Object.assign(this.connection, {\n          text: this.connectionForm.text,\n          messages: this.connectionForm.actionMsg,\n          actionMsg: this.connectionForm.actionMsg,\n        }));\n      },\n      async handleClickCancelSaveConnection() {\n        this.inputValue = '',\n        this.$emit('update:visible', false);\n      },\n    },\n    watch: {\n      connection: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.connectionForm.id = val.id;\n          this.connectionForm.messages = val.messages;\n          this.connectionForm.actionMsg = val.actionMsg;\n\n        },\n      },\n    },\n  };\n</script>\n<style>\n\n\n  .text-label-switch {\n  margin-left: 15px;\n  margin-right: 10px;\n  margin-top: 10px;\n}\n</style>"]}]}
{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/ConnectionDialog.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/ConnectionDialog.vue","mtime":1655119356345},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/css-loader/index.js","mtime":1655376985534},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655376986178},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/postcss-loader/src/index.js","mtime":1655376985873},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/postcss-loader/src/index.js","mtime":1655376985873},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js","mtime":1655376986005}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-tag {\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-top: 5px;\n}\n\n\n.button-new-tag {\n  margin-left: 10px;\n  margin-right: 10px;\n  height: 32px;\n  line-height: 30px;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-top: 5px;\n}\n.input-new-tag {\n  width: 100px;\n  margin-top: 5px;\n  margin-left: 10px;\n  margin-right: 10px;\n  vertical-align: bottom;\n\n}\n\n\n\n",{"version":3,"sources":["ConnectionDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ConnectionDialog.vue","sourceRoot":"src/components/Dialog","sourcesContent":["<template>\n    <div>\n      <md-dialog :md-click-outside-to-close=\"false\" :md-active.sync=\"visible\">\n      <md-dialog-title>Nachrichten</md-dialog-title>\n\n<el-tag\n  :key=\"tag\"\n  v-for=\"tag in connectionForm.messages\"\n  closable\n  class=\"SBD-select\"\n  :disable-transitions=\"false\"\n  @close=\"handleClose(tag)\">\n  {{tag}}\n</el-tag>\n<el-input\n  class=\"input-new-tag\"\n  v-if=\"inputVisible\"\n  v-model=\"inputValue\"\n  ref=\"saveTagInput\"\n  size=\"mini\"\n  @keyup.enter.native=\"handleInputConfirm\"\n  @blur=\"handleInputConfirm\"\n>\n</el-input>\n<el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ Neue Nachricht</el-button>\n          <div class=\"md-layout md-alignment-top-center\">\n    <div class=\"md-layout-item \">\n        <md-button @click=\"handleClickSaveConnection\">Schlie√üen</md-button>\n    </div>\n  </div>\n  \n      </md-dialog>\n    </div>\n</template>\n<script>\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      connection: {\n        type: Object,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        inputVisible: false,\n        inputValue: '',\n        connectionForm: {\n          sourceId: null,\n          sourcePosition: null,\n          destinationId: null,\n          destinationPosition: null,\n          text: null,\n          messages: [],\n        },\n      };\n    },\n    methods: {\n handleClose(tag) {\n        this.connectionForm.messages.splice(this.connectionForm.messages.indexOf(tag), 1);\n      },\n\n      showInput() {\n        this.inputVisible = true;\n        this.$nextTick(_ => {\n          this.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n      handleInputConfirm() {\n        let inputValue = this.inputValue;\n        if (inputValue) {\n          this.connectionForm.messages.push(inputValue);\n        }\n        this.inputVisible = false;\n        this.inputValue = '';\n      },\n      async handleClickSaveConnection() {\n        this.inputValue = '',\n        this.$emit('update:visible', false);\n        this.$emit('update:connection', Object.assign(this.connection, {\n          text: this.connectionForm.text,\n          messages: this.connectionForm.messages\n        }));\n      },\n      async handleClickCancelSaveConnection() {\n        this.inputValue = '',\n        this.$emit('update:visible', false);\n      },\n    },\n    watch: {\n      connection: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.connectionForm.id = val.id;\n           this.connectionForm.messages = val.messages;\n        },\n      },\n    },\n  };\n</script>\n<style>\n\n  .el-tag {\n    margin-left: 10px;\n    margin-right: 10px;\n    margin-top: 5px;\n  }\n\n\n  .button-new-tag {\n    margin-left: 10px;\n    margin-right: 10px;\n    height: 32px;\n    line-height: 30px;\n    padding-top: 0;\n    padding-bottom: 0;\n    margin-top: 5px;\n  }\n  .input-new-tag {\n    width: 100px;\n    margin-top: 5px;\n    margin-left: 10px;\n    margin-right: 10px;\n    vertical-align: bottom;\n\n  }\n\n\n\n</style>"]}]}
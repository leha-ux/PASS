{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/views/SID.vue?vue&type=template&id=02b290f8&scoped=true&","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/views/SID.vue","mtime":1655049120576},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655376986201},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js","mtime":1655376986005}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"toolbar\" },\n        [\n          _c(\n            \"el-button\",\n            { attrs: { size: \"mini\" }, on: { click: _vm.handleAddSubject } },\n            [_vm._v(\"\\n        Füge Subjekt hinzu\\n      \")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"mini\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$refs.chart.remove()\n                },\n              },\n            },\n            [_vm._v(\"Lösche Subjekt/ Nachrichten\")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"mini\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$refs.chart.editCurrent()\n                },\n              },\n            },\n            [_vm._v(\"\\n        Bearbeite Subjekt/ Nachrichten\\n      \")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { size: \"mini\" },\n              on: {\n                click: function ($event) {\n                  return _vm.test()\n                },\n              },\n            },\n            [_vm._v(\"\\nTest\")]\n          ),\n          _c(\n            \"el-popconfirm\",\n            {\n              attrs: {\n                \"confirm-button-text\": \"OK\",\n                \"cancel-button-text\": \"Abbrechen\",\n                icon: \"el-icon-info\",\n                \"icon-color\": \"red\",\n                title:\n                  \"Ein Import überschreibt das aktuell gespeicherte Modell. Wollen Sie trotzdem fortfahren?\",\n              },\n              on: {\n                confirm: function ($event) {\n                  return _vm.getFile()\n                },\n              },\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  staticClass: \"import\",\n                  attrs: { slot: \"reference\", size: \"mini\" },\n                  slot: \"reference\",\n                },\n                [_vm._v(\"Import\")]\n              ),\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticStyle: { height: \"0px\", width: \"0px\", overflow: \"hidden\" },\n            },\n            [\n              _c(\"input\", {\n                attrs: { id: \"upfile\", type: \"file\", accept: \".json\" },\n                on: {\n                  change: function ($event) {\n                    return _vm.processFile($event)\n                  },\n                },\n              }),\n            ]\n          ),\n          _c(\n            \"el-button\",\n            {\n              staticClass: \"export\",\n              attrs: { size: \"mini\" },\n              on: {\n                click: function ($event) {\n                  return _vm.handleSave()\n                },\n              },\n            },\n            [_vm._v(\"Export\")]\n          ),\n        ],\n        1\n      ),\n      _c(\"flowchart\", {\n        ref: \"chart\",\n        attrs: {\n          nodes: _vm.nodes,\n          connections: _vm.connections,\n          width: 200000,\n          height: 1000,\n          readonly: false,\n        },\n        on: {\n          editnode: _vm.handleEditNode,\n          dblclick: _vm.handleDblClick,\n          editconnection: _vm.handleEditConnection,\n          save: _vm.handleChartSave,\n          select: _vm.handleSelect,\n          selectconnection: _vm.handleSelectConnection,\n        },\n      }),\n      _c(\"node-dialog\", {\n        attrs: { visible: _vm.nodeDialogVisible, node: _vm.nodeForm.target },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.nodeDialogVisible = $event\n          },\n          \"update:node\": function ($event) {\n            return _vm.$set(_vm.nodeForm, \"target\", $event)\n          },\n        },\n      }),\n      _c(\"connection-dialog\", {\n        attrs: {\n          visible: _vm.connectionDialogVisible,\n          connection: _vm.connectionForm.target,\n          operation: _vm.connectionForm.operation,\n        },\n        on: {\n          \"update:visible\": function ($event) {\n            _vm.connectionDialogVisible = $event\n          },\n          \"update:connection\": function ($event) {\n            return _vm.$set(_vm.connectionForm, \"target\", $event)\n          },\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/SBDNodeDialog.vue?vue&type=template&id=fe741170&scoped=true&","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/components/Dialog/SBDNodeDialog.vue","mtime":1655376700674},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655376986201},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/vue-loader/lib/index.js","mtime":1655376986005}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"md-dialog\",\n        {\n          attrs: {\n            \"md-click-outside-to-close\": false,\n            \"md-active\": _vm.visible,\n          },\n          on: {\n            \"update:mdActive\": function ($event) {\n              _vm.visible = $event\n            },\n            \"update:md-active\": function ($event) {\n              _vm.visible = $event\n            },\n          },\n        },\n        [\n          _c(\"md-dialog-title\", [_vm._v(\"Ändere Zustand\")]),\n          _c(\n            \"div\",\n            { staticClass: \"body\" },\n            [\n              _c(\n                \"el-row\",\n                { staticClass: \"SBD-input\" },\n                [\n                  _c(\n                    \"el-col\",\n                    [\n                      _c(\"label\", { staticClass: \"text-label\" }, [\n                        _vm._v(\"Name\"),\n                      ]),\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"Please input\" },\n                        model: {\n                          value: _vm.nodeForm.name,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.nodeForm, \"name\", $$v)\n                          },\n                          expression: \"nodeForm.name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { staticClass: \"SBD-input\" },\n                [\n                  _c(\n                    \"el-col\",\n                    [\n                      _c(\"label\", { staticClass: \"text-label\" }, [\n                        _vm._v(\"ID\"),\n                      ]),\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"Please input\" },\n                        model: {\n                          value: _vm.nodeForm.externalID,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.nodeForm, \"externalID\", $$v)\n                          },\n                          expression: \"nodeForm.externalID\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                [\n                  _c(\"el-col\", [\n                    _c(\"label\", { staticClass: \"text-label-select\" }, [\n                      _vm._v(\"State\"),\n                    ]),\n                  ]),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { staticClass: \"SBD-input\" },\n                [\n                  _c(\n                    \"el-col\",\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: {\n                            multiple: \"\",\n                            placeholder: \"Füge State hinzu\",\n                            size: \"large\",\n                          },\n                          model: {\n                            value: _vm.nodeForm.state,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.nodeForm, \"state\", $$v)\n                            },\n                            expression: \"nodeForm.state\",\n                          },\n                        },\n                        _vm._l(_vm.optionsState, function (item) {\n                          return _c(\"el-option\", {\n                            key: item.value,\n                            attrs: {\n                              label: item.label,\n                              value: item.value,\n                              disabled: item.disabled,\n                            },\n                          })\n                        }),\n                        1\n                      ),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n              _c(\n                \"el-row\",\n                { staticClass: \"SBD-input\" },\n                [\n                  _c(\n                    \"el-col\",\n                    [\n                      _c(\"label\", { staticClass: \"text-label\" }, [\n                        _vm._v(\"Kommentar\"),\n                      ]),\n                      _c(\"el-input\", {\n                        attrs: {\n                          placeholder: \"Füge Kommentar hinzu\",\n                          \"show-word-limit\": \"\",\n                          type: \"textarea\",\n                        },\n                        model: {\n                          value: _vm.nodeForm.comment,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.nodeForm, \"comment\", $$v)\n                          },\n                          expression: \"nodeForm.comment\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"div\", { staticClass: \"md-layout md-alignment-center\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"md-layout-item \" },\n              [\n                _c(\n                  \"md-button\",\n                  { on: { click: _vm.handleClickCancelSaveNode } },\n                  [_vm._v(\"Abbrechen\")]\n                ),\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"md-layout-item \" },\n              [\n                _c(\"md-button\", { on: { click: _vm.handleClickSaveNode } }, [\n                  _vm._v(\"Speichern\"),\n                ]),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
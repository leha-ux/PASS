{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/thread-loader/dist/cjs.js!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/babel-loader/lib/index.js!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/utils/svg.js","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/utils/svg.js","mtime":1654361899990},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/babel.config.js","mtime":1654095143863},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/thread-loader/dist/cjs.js","mtime":1655376985502},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/babel-loader/lib/index.js","mtime":1655376985883}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport { approximatelyEquals } from \"./math\";\n\nfunction lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle, dash) {\n  var sta = [x1, y1];\n  var end = [x2, y2];\n  var path = g.append('path').attr(\"id\", \"test\").attr('stroke', strokeStyle).attr('stroke-width', lineWidth).attr('fill', 'none').attr('d', \"M \".concat(sta[0], \" \").concat(sta[1], \" L \").concat(end[0], \" \").concat(end[1]));\n\n  if (dash) {\n    path.style('stroke-dasharray', dash.join(','));\n  }\n\n  return path;\n}\n\nfunction connect(g, x1, y1, x2, y2, startPosition, endPosition, lineWidth, strokeStyle, markered) {\n  if (!endPosition) {\n    endPosition = x1 > x2 ? 'right' : 'left';\n  }\n\n  var points = [];\n  var start = [x1, y1];\n  var end = [x2, y2];\n  var centerX = start[0] + (end[0] - start[0]) / 2;\n  var centerY = start[1] + (end[1] - start[1]) / 2;\n  var second;\n\n  var addVerticalCenterLine = function addVerticalCenterLine() {\n    var third = [centerX, second[1]];\n    var forth = [centerX, penult[1]];\n    points.push(third);\n    points.push(forth);\n  };\n\n  var addHorizontalCenterLine = function addHorizontalCenterLine() {\n    var third = [second[0], centerY];\n    var forth = [penult[0], centerY];\n    points.push(third);\n    points.push(forth);\n  };\n\n  var addHorizontalTopLine = function addHorizontalTopLine() {\n    points.push([second[0], start[1] - 50]);\n    points.push([penult[0], start[1] - 50]);\n  };\n\n  var addHorizontalBottomLine = function addHorizontalBottomLine() {\n    points.push([second[0], start[1] + 50]);\n    points.push([penult[0], start[1] + 50]);\n  };\n\n  var addVerticalRightLine = function addVerticalRightLine() {\n    points.push([start[0] + 80, second[1]]);\n    points.push([start[0] + 80, penult[1]]);\n  };\n\n  var addVerticalLeftLine = function addVerticalLeftLine() {\n    points.push([start[0] - 80, second[1]]);\n    points.push([start[0] - 80, penult[1]]);\n  };\n\n  var addSecondXPenultY = function addSecondXPenultY() {\n    points.push([second[0], penult[1]]);\n  };\n\n  var addPenultXSecondY = function addPenultXSecondY() {\n    points.push([penult[0], second[1]]);\n  };\n\n  switch (startPosition) {\n    case 'left':\n      second = [start[0] - 20, start[1]];\n      break;\n\n    case 'top':\n      second = [start[0], start[1] - 20];\n      break;\n\n    case 'bottom':\n      second = [start[0], start[1] + 20];\n      break;\n\n    default:\n      second = [start[0] + 20, start[1]];\n      break;\n  }\n\n  var penult = null;\n\n  switch (endPosition) {\n    case 'right':\n      penult = [end[0] + 20, end[1]];\n      break;\n\n    case 'top':\n      penult = [end[0], end[1] - 20];\n      break;\n\n    case 'bottom':\n      penult = [end[0], end[1] + 20];\n      break;\n\n    default:\n      penult = [end[0] - 20, end[1]];\n      break;\n  }\n\n  points.push(start);\n  points.push(second);\n  startPosition = startPosition || 'right';\n  endPosition = endPosition || 'left';\n  var direction = getDirection(x1, y1, x2, y2);\n\n  if (direction.indexOf('r') > -1) {\n    if (startPosition === 'right' || endPosition === 'left') {\n      if (second[0] > centerX) {\n        second[0] = centerX;\n      }\n\n      if (penult[0] < centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n\n  if (direction.indexOf('d') > -1) {\n    if (startPosition === 'bottom' || endPosition === 'top') {\n      if (second[1] > centerY) {\n        second[1] = centerY;\n      }\n\n      if (penult[1] < centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n\n  if (direction.indexOf('l') > -1) {\n    if (startPosition === 'left' || endPosition === 'right') {\n      if (second[0] < centerX) {\n        second[0] = centerX;\n      }\n\n      if (penult[0] > centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n\n  if (direction.indexOf('u') > -1) {\n    if (startPosition === 'top' || endPosition === 'bottom') {\n      if (second[1] < centerY) {\n        second[1] = centerY;\n      }\n\n      if (penult[1] > centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n\n  switch (direction) {\n    case 'lu':\n      {\n        if (startPosition === 'right') {\n          switch (endPosition) {\n            case 'top':\n            case 'right':\n              addSecondXPenultY();\n              break;\n\n            default:\n              {\n                addHorizontalCenterLine();\n                break;\n              }\n          }\n        } else if (startPosition === 'bottom') {\n          switch (endPosition) {\n            case 'top':\n              addVerticalCenterLine();\n              break;\n\n            default:\n              {\n                addPenultXSecondY();\n                break;\n              }\n          }\n        } else if (startPosition === 'top') {\n          switch (endPosition) {\n            case 'top':\n            case 'right':\n              addSecondXPenultY();\n              break;\n\n            default:\n              {\n                addHorizontalCenterLine();\n                break;\n              }\n          }\n        } else {\n          // startPosition is left\n          switch (endPosition) {\n            case 'top':\n            case 'right':\n              addVerticalCenterLine();\n              break;\n\n            default:\n              {\n                addPenultXSecondY();\n                break;\n              }\n          }\n        }\n\n        break;\n      }\n\n    case 'u':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'right':\n            {\n              break;\n            }\n\n          case 'top':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          default:\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n\n          default:\n            {\n              addVerticalRightLine();\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addPenultXSecondY();\n              break;\n            }\n\n          case 'right':\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n\n          case 'top':\n            addVerticalRightLine();\n            break;\n\n          default:\n            {\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            break;\n\n          default:\n            {\n              points.push([second[0], penult[1]]);\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'ru':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          case 'top':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          default:\n            {\n              addPenultXSecondY();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'top':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              addPenultXSecondY();\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'right':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addSecondXPenultY();\n            break;\n\n          default:\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'l':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n\n          default:\n            {\n              addHorizontalBottomLine();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addHorizontalBottomLine();\n              break;\n            }\n\n          case 'right':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          case 'top':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addHorizontalTopLine();\n              break;\n            }\n\n          case 'right':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          case 'top':\n            {\n              break;\n            }\n\n          default:\n            {\n              addVerticalCenterLine();\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n            {\n              addHorizontalTopLine();\n              break;\n            }\n\n          case 'right':\n            {\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'r':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n            {\n              break;\n            }\n\n          case 'right':\n            {\n              addHorizontalTopLine();\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          case 'right':\n            {\n              addHorizontalBottomLine();\n              break;\n            }\n\n          case 'top':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addPenultXSecondY();\n              break;\n            }\n\n          case 'right':\n            {\n              addHorizontalTopLine();\n              break;\n            }\n\n          case 'top':\n            {\n              break;\n            }\n\n          default:\n            {\n              addVerticalCenterLine();\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n\n          default:\n            {\n              addHorizontalBottomLine();\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'ld':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addPenultXSecondY();\n              break;\n            }\n\n          case 'top':\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addPenultXSecondY();\n            break;\n\n          default:\n            {\n              addVerticalCenterLine();\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addPenultXSecondY();\n            break;\n\n          case 'right':\n            {\n              addVerticalCenterLine();\n              break;\n            }\n\n          default:\n            {\n              addSecondXPenultY();\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'd':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n\n          case 'right':\n            {\n              addPenultXSecondY();\n              break;\n            }\n\n          case 'top':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          default:\n            {\n              addVerticalRightLine();\n              break;\n            }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n\n          case 'top':\n            {\n              break;\n            }\n\n          default:\n            {\n              addVerticalRightLine();\n              break;\n            }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n            {\n              addVerticalLeftLine();\n              break;\n            }\n\n          default:\n            {\n              addVerticalRightLine();\n              break;\n            }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n            {\n              break;\n            }\n\n          case 'right':\n            {\n              addHorizontalCenterLine();\n              break;\n            }\n\n          case 'top':\n            {\n              addSecondXPenultY();\n              break;\n            }\n\n          default:\n            {\n              addVerticalLeftLine();\n              break;\n            }\n        }\n      }\n\n      break;\n\n    case 'rd':\n      {\n        if (startPosition === 'right' && endPosition === 'left') {\n          addVerticalCenterLine();\n        } else if (startPosition === 'right' && endPosition === 'bottom') {\n          addSecondXPenultY();\n        } else if (startPosition === 'right' && endPosition === 'top' || startPosition === 'right' && endPosition === 'right') {\n          addPenultXSecondY();\n        } else if (startPosition === 'bottom' && endPosition === 'left') {\n          addSecondXPenultY();\n        } else if (startPosition === 'bottom' && endPosition === 'right') {\n          addPenultXSecondY();\n        } else if (startPosition === 'bottom' && endPosition === 'top') {\n          addHorizontalCenterLine();\n        } else if (startPosition === 'bottom' && endPosition === 'bottom') {\n          addSecondXPenultY();\n        } else if (startPosition === 'top' && endPosition === 'left') {\n          addPenultXSecondY();\n        } else if (startPosition === 'top' && endPosition === 'right') {\n          addPenultXSecondY();\n        } else if (startPosition === 'top' && endPosition === 'top') {\n          addPenultXSecondY();\n        } else if (startPosition === 'top' && endPosition === 'bottom') {\n          addVerticalCenterLine();\n        } else if (startPosition === 'left' && endPosition === 'left') {\n          addSecondXPenultY();\n        } else if (startPosition === 'left' && endPosition === 'right') {\n          addHorizontalCenterLine();\n        } else if (startPosition === 'left' && endPosition === 'top') {\n          addHorizontalCenterLine();\n        } else if (startPosition === 'left' && endPosition === 'bottom') {\n          addSecondXPenultY();\n        }\n\n        break;\n      }\n  }\n\n  points.push(penult);\n  points.push(end);\n  var lines = [];\n  var paths = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var source = points[i];\n    var destination = points[i + 1];\n    lines.push({\n      sourceX: source[0],\n      sourceY: source[1],\n      destinationX: destination[0],\n      destinationY: destination[1]\n    });\n    var finish = i === points.length - 2;\n\n    if (finish && markered) {\n      var path = arrowTo(g, source[0], source[1], destination[0], destination[1], lineWidth, strokeStyle);\n      paths.push(path);\n      break;\n    } else {\n      var _path = lineTo(g, source[0], source[1], destination[0], destination[1], lineWidth, strokeStyle);\n\n      paths.push(_path);\n    }\n\n    if (finish) {\n      break;\n    }\n  }\n\n  return {\n    lines: lines,\n    paths: paths\n  };\n}\n\nfunction arrowTo(g, x1, y1, x2, y2, lineWidth, strokeStyle) {\n  var path = lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle);\n  var id = 'arrow' + strokeStyle.replace('#', '');\n  g.append('marker').attr('id', id).attr('markerUnits', 'strokeWidth').attr('viewBox', '0 0 12 12').attr('refX', 9).attr('refY', 6).attr('markerWidth', 10).attr('markerHeight', 10).attr('orient', 'auto').append('path').attr('d', 'M2,2 L10,6 L2,10 L6,6 L2,2').attr('fill', strokeStyle);\n  path.attr('marker-end', 'url(#' + id + ')');\n  return path;\n}\n\nfunction getDirection(x1, y1, x2, y2) {\n  // Use approximatelyEquals to fix the problem of css position presicion\n  if (x2 < x1 && approximatelyEquals(y2, y1)) {\n    return 'l';\n  }\n\n  if (x2 > x1 && approximatelyEquals(y2, y1)) {\n    return 'r';\n  }\n\n  if (approximatelyEquals(x2, x1) && y2 < y1) {\n    return 'u';\n  }\n\n  if (approximatelyEquals(x2, x1) && y2 > y1) {\n    return 'd';\n  }\n\n  if (x2 < x1 && y2 < y1) {\n    return 'lu';\n  }\n\n  if (x2 > x1 && y2 < y1) {\n    return 'ru';\n  }\n\n  if (x2 < x1 && y2 > y1) {\n    return 'ld';\n  }\n\n  return 'rd';\n}\n\nexport { arrowTo, lineTo, getDirection, connect };",{"version":3,"names":["approximatelyEquals","lineTo","g","x1","y1","x2","y2","lineWidth","strokeStyle","dash","sta","end","path","append","attr","style","join","connect","startPosition","endPosition","markered","points","start","centerX","centerY","second","addVerticalCenterLine","third","forth","penult","push","addHorizontalCenterLine","addHorizontalTopLine","addHorizontalBottomLine","addVerticalRightLine","addVerticalLeftLine","addSecondXPenultY","addPenultXSecondY","direction","getDirection","indexOf","lines","paths","i","length","source","destination","sourceX","sourceY","destinationX","destinationY","finish","arrowTo","id","replace"],"sources":["/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/utils/svg.js"],"sourcesContent":["import {approximatelyEquals} from './math';\n\n\nfunction lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle, dash) {\n  let sta = [x1, y1];\n  let end = [x2, y2];\n  let path = g.append('path').\n      attr(\"id\", \"test\").\n      attr('stroke', strokeStyle).\n      attr('stroke-width', lineWidth).\n      attr('fill', 'none').\n      attr('d', `M ${sta[0]} ${sta[1]} L ${end[0]} ${end[1]}`);\n\n  if (dash) {\n    path.style('stroke-dasharray', dash.join(','));\n  }\n  return path;\n}\n\nfunction connect(g, x1, y1, x2, y2, startPosition, endPosition, lineWidth,\n                 strokeStyle, markered) {\n  if (!endPosition) {\n    endPosition = x1 > x2 ? 'right' : 'left';\n  }\n\n  let points = [];\n  let start = [x1, y1];\n  let end = [x2, y2];\n  let centerX = start[0] + (end[0] - start[0]) / 2;\n  let centerY = start[1] + (end[1] - start[1]) / 2;\n  let second;\n  let addVerticalCenterLine = function() {\n    let third = [centerX, second[1]];\n    let forth = [centerX, penult[1]];\n    points.push(third);\n    points.push(forth);\n  };\n  let addHorizontalCenterLine = function() {\n    let third = [second[0], centerY];\n    let forth = [penult[0], centerY];\n    points.push(third);\n    points.push(forth);\n  };\n  let addHorizontalTopLine = function() {\n    points.push([second[0], start[1] - 50]);\n    points.push([penult[0], start[1] - 50]);\n  };\n  let addHorizontalBottomLine = function() {\n    points.push([second[0], start[1] + 50]);\n    points.push([penult[0], start[1] + 50]);\n  };\n  let addVerticalRightLine = function() {\n    points.push([start[0] + 80, second[1]]);\n    points.push([start[0] + 80, penult[1]]);\n  };\n  let addVerticalLeftLine = function() {\n    points.push([start[0] - 80, second[1]]);\n    points.push([start[0] - 80, penult[1]]);\n  };\n  let addSecondXPenultY = function() {\n    points.push([second[0], penult[1]]);\n  };\n  let addPenultXSecondY = function() {\n    points.push([penult[0], second[1]]);\n  };\n  switch (startPosition) {\n    case 'left':\n      second = [start[0] - 20, start[1]];\n      break;\n    case 'top':\n      second = [start[0], start[1] - 20];\n      break;\n    case 'bottom':\n      second = [start[0], start[1] + 20];\n      break;\n    default:\n      second = [start[0] + 20, start[1]];\n      break;\n  }\n  let penult = null;\n  switch (endPosition) {\n    case 'right':\n      penult = [end[0] + 20, end[1]];\n      break;\n    case 'top':\n      penult = [end[0], end[1] - 20];\n      break;\n    case 'bottom':\n      penult = [end[0], end[1] + 20];\n      break;\n    default:\n      penult = [end[0] - 20, end[1]];\n      break;\n  }\n  points.push(start);\n  points.push(second);\n  startPosition = startPosition || 'right';\n  endPosition = endPosition || 'left';\n  let direction = getDirection(x1, y1, x2, y2);\n  if (direction.indexOf('r') > -1) {\n    if (startPosition === 'right' || endPosition === 'left') {\n      if (second[0] > centerX) {\n        second[0] = centerX;\n      }\n      if (penult[0] < centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n  if (direction.indexOf('d') > -1) {\n    if (startPosition === 'bottom' || endPosition === 'top') {\n      if (second[1] > centerY) {\n        second[1] = centerY;\n      }\n      if (penult[1] < centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n  if (direction.indexOf('l') > -1) {\n    if (startPosition === 'left' || endPosition === 'right') {\n      if (second[0] < centerX) {\n        second[0] = centerX;\n      }\n      if (penult[0] > centerX) {\n        penult[0] = centerX;\n      }\n    }\n  }\n  if (direction.indexOf('u') > -1) {\n    if (startPosition === 'top' || endPosition === 'bottom') {\n      if (second[1] < centerY) {\n        second[1] = centerY;\n      }\n      if (penult[1] > centerY) {\n        penult[1] = centerY;\n      }\n    }\n  }\n  switch (direction) {\n    case 'lu': {\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'top':\n            addVerticalCenterLine();\n            break;\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // startPosition is left\n        switch (endPosition) {\n          case 'top':\n          case 'right':\n            addVerticalCenterLine();\n            break;\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      }\n      break;\n    }\n    case 'u':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'right': {\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'right': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'top':\n            addVerticalRightLine();\n            break;\n          default: {\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            break;\n          default: {\n            points.push([second[0], penult[1]]);\n            break;\n          }\n        }\n      }\n      break;\n    case 'ru':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addVerticalCenterLine();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addPenultXSecondY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'right': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addSecondXPenultY();\n            break;\n          default: {\n            addHorizontalCenterLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'l':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n          default: {\n            addHorizontalBottomLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalBottomLine();\n            break;\n          }\n          case 'right': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'right': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'right': {\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      }\n      break;\n    case 'r':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            break;\n          }\n          case 'right': {\n            addHorizontalTopLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addSecondXPenultY();\n            break;\n          }\n          case 'right': {\n            addHorizontalBottomLine();\n            break;\n          }\n          case 'top': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'right': {\n            addHorizontalTopLine();\n            break;\n          }\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addHorizontalTopLine();\n            break;\n          default: {\n            addHorizontalBottomLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'ld':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'top': {\n            addHorizontalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n          case 'top':\n            addPenultXSecondY();\n            break;\n          default: {\n            addVerticalCenterLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left':\n          case 'top':\n            addPenultXSecondY();\n            break;\n          case 'right': {\n            addVerticalCenterLine();\n            break;\n          }\n          default: {\n            addSecondXPenultY();\n            break;\n          }\n        }\n      }\n      break;\n    case 'd':\n      if (startPosition === 'right') {\n        switch (endPosition) {\n          case 'left': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'right': {\n            addPenultXSecondY();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'bottom') {\n        switch (endPosition) {\n          case 'left':\n          case 'right':\n            addPenultXSecondY();\n            break;\n          case 'top': {\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else if (startPosition === 'top') {\n        switch (endPosition) {\n          case 'left': {\n            addVerticalLeftLine();\n            break;\n          }\n          default: {\n            addVerticalRightLine();\n            break;\n          }\n        }\n      } else {\n        // left\n        switch (endPosition) {\n          case 'left': {\n            break;\n          }\n          case 'right': {\n            addHorizontalCenterLine();\n            break;\n          }\n          case 'top': {\n            addSecondXPenultY();\n            break;\n          }\n          default: {\n            addVerticalLeftLine();\n            break;\n          }\n        }\n      }\n      break;\n    case 'rd': {\n      if (startPosition === 'right' && endPosition === 'left') {\n        addVerticalCenterLine();\n      } else if (startPosition === 'right' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      } else if (\n          (startPosition === 'right' && endPosition === 'top') ||\n          (startPosition === 'right' && endPosition === 'right')\n      ) {\n        addPenultXSecondY();\n      } else if (startPosition === 'bottom' && endPosition === 'left') {\n        addSecondXPenultY();\n      } else if (startPosition === 'bottom' && endPosition === 'right') {\n        addPenultXSecondY();\n      } else if (startPosition === 'bottom' && endPosition === 'top') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'bottom' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      } else if (startPosition === 'top' && endPosition === 'left') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'right') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'top') {\n        addPenultXSecondY();\n      } else if (startPosition === 'top' && endPosition === 'bottom') {\n        addVerticalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'left') {\n        addSecondXPenultY();\n      } else if (startPosition === 'left' && endPosition === 'right') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'top') {\n        addHorizontalCenterLine();\n      } else if (startPosition === 'left' && endPosition === 'bottom') {\n        addSecondXPenultY();\n      }\n      break;\n    }\n  }\n  points.push(penult);\n  points.push(end);\n\n  let lines = [];\n  let paths = [];\n  for (let i = 0; i < points.length; i++) {\n    let source = points[i];\n    let destination = points[i + 1];\n    lines.push({\n      sourceX: source[0],\n      sourceY: source[1],\n      destinationX: destination[0],\n      destinationY: destination[1],\n    });\n    let finish = i === points.length - 2;\n    if (finish && markered) {\n      let path = arrowTo(g, source[0], source[1], destination[0],\n          destination[1], lineWidth, strokeStyle);\n      paths.push(path);\n\n      break;\n    } else {\n      let path = lineTo(g, source[0], source[1], destination[0], destination[1],\n          lineWidth, strokeStyle);\n      paths.push(path);\n    }\n    if (finish) {\n      break;\n    }\n  }\n  return {lines, paths};\n}\nfunction arrowTo(g, x1, y1, x2, y2, lineWidth, strokeStyle) {\n  let path = lineTo(g, x1, y1, x2, y2, lineWidth, strokeStyle);\n  const id = 'arrow' + strokeStyle.replace('#', '');\n  g.append('marker').\n      attr('id', id).\n      attr('markerUnits', 'strokeWidth').\n      attr('viewBox', '0 0 12 12').\n      attr('refX', 9).\n      attr('refY', 6).\n      attr('markerWidth', 10).\n      attr('markerHeight', 10).\n      attr('orient', 'auto').\n      append('path').\n      attr('d', 'M2,2 L10,6 L2,10 L6,6 L2,2').\n      attr('fill', strokeStyle)\n\n  path.attr('marker-end', 'url(#' + id + ')');\n  return path;\n}\n\nfunction getDirection(x1, y1, x2, y2) {\n  // Use approximatelyEquals to fix the problem of css position presicion\n  if (x2 < x1 && approximatelyEquals(y2, y1)) {\n    return 'l';\n  }\n  if (x2 > x1 && approximatelyEquals(y2, y1)) {\n    return 'r';\n  }\n  if (approximatelyEquals(x2, x1) && y2 < y1) {\n    return 'u';\n  }\n  if (approximatelyEquals(x2, x1) && y2 > y1) {\n    return 'd';\n  }\n  if (x2 < x1 && y2 < y1) {\n    return 'lu';\n  }\n  if (x2 > x1 && y2 < y1) {\n    return 'ru';\n  }\n  if (x2 < x1 && y2 > y1) {\n    return 'ld';\n  }\n  return 'rd';\n}\n\nexport {\n  arrowTo,\n  lineTo,\n  getDirection,\n  connect,\n};\n"],"mappings":"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"}]}
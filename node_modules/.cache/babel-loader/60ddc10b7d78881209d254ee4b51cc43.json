{"remainingRequest":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/thread-loader/dist/cjs.js!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/babel-loader/lib/index.js!/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/store.js","dependencies":[{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/store.js","mtime":1655069981757},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/babel.config.js","mtime":1654095143863},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/cache-loader/dist/cjs.js","mtime":1655376985815},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/thread-loader/dist/cjs.js","mtime":1655376985502},{"path":"/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/node_modules/babel-loader/lib/index.js","mtime":1655376985883}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getField, updateField } from 'vuex-map-fields';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    connections: [],\n    nodes: []\n  },\n  getters: {\n    getField: getField,\n    getNode: function getNode(state) {\n      return function (id) {\n        return state.nodes.find(function (node) {\n          return node.id === id;\n        });\n      };\n    },\n    getSBD: function getSBD(state) {\n      return function (findID) {\n        var returnNode = null;\n        state.nodes.forEach(function (node) {\n          if (node.SBD.connections.find(function (elem) {\n            return elem.id === findID;\n          })) {\n            returnNode = node;\n          }\n        });\n        return returnNode;\n      };\n    },\n    getOutgoingMessages: function getOutgoingMessages(state) {\n      return function (startID, endID) {\n        return state.connections.filter(function (element) {\n          return element.destination.id === endID && element.source.id === startID;\n        }).map(function (element) {\n          return element.messages;\n        }).flat(1);\n      };\n    },\n    getIncomingMessages: function getIncomingMessages(state) {\n      return function (startID, endID) {\n        return state.connections.filter(function (element) {\n          return element.destination.id === startID && element.source.id === endID;\n        }).map(function (element) {\n          return element.messages;\n        }).flat(1);\n      };\n    }\n  },\n  mutations: {\n    updateField: updateField,\n    initialiseStore: function initialiseStore(state) {\n      // Check if the ID exists\n      if (sessionStorage.getItem('store')) {\n        // Replace the state object with the stored item\n        this.replaceState(Object.assign(state, JSON.parse(sessionStorage.getItem('store'))));\n      }\n    },\n    set_all: function set_all(state, jsonFile) {\n      state.connections = jsonFile[\"connections\"];\n      state.nodes = jsonFile[\"nodes\"];\n    },\n    set_connections: function set_connections(state, payload) {\n      var indexHelp = state.nodes.map(function (i) {\n        return i.id;\n      }).indexOf(payload[\"id\"]);\n      state.nodes[indexHelp].SBD.connections = payload[\"connections\"];\n    },\n    set_nodes: function set_nodes(state, payload) {\n      var indexHelp = state.nodes.map(function (i) {\n        return i.id;\n      }).indexOf(payload[\"id\"]);\n      state.nodes[indexHelp].SBD.nodes = payload[\"nodes\"];\n    },\n    reset_msg: function reset_msg(state, payload) {\n      var indexNode = state.nodes.findIndex(function (element) {\n        return element.id === payload[\"nodeID\"];\n      });\n      var connectionSBDID = state.nodes[indexNode].SBD.connections.findIndex(function (element) {\n        return element.id === payload[\"connectionSBDID\"];\n      });\n\n      if (state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"receive\") {\n        state.nodes[indexNode].SBD.connections[connectionSBDID].receiveMsg = \"\";\n      } else if (state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"send\") {\n        state.nodes[indexNode].SBD.connections[connectionSBDID].sendMsg = \"\";\n      }\n    },\n    set_from_to: function set_from_to(state, payload) {\n      var indexNode = state.nodes.findIndex(function (element) {\n        return element.id === payload[\"nodeID\"];\n      });\n      var connectionSBDID = state.nodes[indexNode].SBD.connections.findIndex(function (element) {\n        return element.id === payload[\"connectionSBDID\"];\n      });\n\n      if (state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"receive\") {\n        state.nodes[indexNode].SBD.connections[connectionSBDID].receiveFrom = payload[\"receive\"];\n      } else if (state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"send\") {\n        state.nodes[indexNode].SBD.connections[connectionSBDID].sendTo = payload[\"send\"];\n      }\n    }\n  }\n});\nexport default store;",{"version":3,"names":["Vue","Vuex","getField","updateField","use","store","Store","state","connections","nodes","getters","getNode","id","find","node","getSBD","findID","returnNode","forEach","SBD","elem","getOutgoingMessages","startID","endID","filter","element","destination","source","map","messages","flat","getIncomingMessages","mutations","initialiseStore","sessionStorage","getItem","replaceState","Object","assign","JSON","parse","set_all","jsonFile","set_connections","payload","indexHelp","i","indexOf","set_nodes","reset_msg","indexNode","findIndex","connectionSBDID","type","receiveMsg","sendMsg","set_from_to","receiveFrom","sendTo"],"sources":["/Users/leonhanschmann/Python_projects/PASS-web-app/PASS/src/store.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { getField, updateField } from 'vuex-map-fields';\n\nVue.use(Vuex)\n\nconst store =  new Vuex.Store({\n  state: {\n  connections: [],\n  nodes: [],\n\n  },\n  getters: { getField, \n\n\n  getNode: \n  (state) => (id) => {\n    return state.nodes.find(node => node.id === id)\n  },\n\n  getSBD: \n  (state) => (findID) => {\n    let returnNode = null \n    state.nodes.forEach(node => {\n        if(node.SBD.connections.find(elem => elem.id === findID)){\n          returnNode =  node\n        }\n    })\n    return returnNode\n  },\n  getOutgoingMessages : \n  (state) => (startID, endID) => {\n    return state.connections.filter(element => element.destination.id === endID && element.source.id === startID).map(element => element.messages).flat(1)\n  },\n  getIncomingMessages : \n  (state) => (startID, endID) => {\n    return state.connections.filter(element => element.destination.id === startID && element.source.id === endID).map(element => element.messages).flat(1)\n  }\n  },\n  mutations: { updateField,\n    initialiseStore(state) {\n\t\t\t// Check if the ID exists\n\t\t\tif(sessionStorage.getItem('store')) {\n\t\t\t\t// Replace the state object with the stored item\n\t\t\t\tthis.replaceState(\n\t\t\t\t\tObject.assign(state, JSON.parse(sessionStorage.getItem('store')))\n\t\t\t\t);\n\t\t\t}\n\t\t},\nset_all(state, jsonFile){\nstate.connections = jsonFile[\"connections\"]\nstate.nodes = jsonFile[\"nodes\"]\n},\nset_connections(state, payload){\nvar indexHelp = state.nodes.map(i => i.id).indexOf(payload[\"id\"])\nstate.nodes[indexHelp].SBD.connections = payload[\"connections\"]\n},\n\nset_nodes(state, payload){\n  var indexHelp = state.nodes.map(i => i.id).indexOf(payload[\"id\"])\n  state.nodes[indexHelp].SBD.nodes = payload[\"nodes\"]\n  },\n\n  reset_msg(state, payload){\n    let indexNode = state.nodes.findIndex(element => element.id === payload[\"nodeID\"])\n    let connectionSBDID = state.nodes[indexNode].SBD.connections.findIndex(element => element.id === payload[\"connectionSBDID\"])\n    if(state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"receive\"){\n      state.nodes[indexNode].SBD.connections[connectionSBDID].receiveMsg = \"\"\n    } else if(state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"send\"){\n      state.nodes[indexNode].SBD.connections[connectionSBDID].sendMsg = \"\"\n    }\n  },\n  set_from_to(state, payload){\n    let indexNode = state.nodes.findIndex(element => element.id === payload[\"nodeID\"])\n    let connectionSBDID = state.nodes[indexNode].SBD.connections.findIndex(element => element.id === payload[\"connectionSBDID\"])\n    if(state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"receive\"){\n      state.nodes[indexNode].SBD.connections[connectionSBDID].receiveFrom = payload[\"receive\"]\n    } else if(state.nodes[indexNode].SBD.connections[connectionSBDID].source.type === \"send\"){\n      state.nodes[indexNode].SBD.connections[connectionSBDID].sendTo = payload[\"send\"]\n    }\n  },\n\n  },\n  })\nexport default store;\n"],"mappings":"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"}]}